<?php

/**
 * @file
 * ui_patterns_variants.module
 */

use Drupal\Core\Layout\LayoutDefinition;
use Drupal\ui_patterns\UiPatterns;

/**
 * Implements hook_layout_alter().
 */
function ui_patterns_variants_layout_alter(&$definitions) {
  /** @var \Drupal\ui_patterns\Definition\PatternDefinition[] $pattern_definitions */
  // Right now, this overrides the services provided in ui_patterns_library.
  foreach (UiPatterns::getPatternDefinitions() as $pattern_definition) {
    $definition = [
      'label' => $pattern_definition->getLabel(),
      'theme' => $pattern_definition->getThemeHook(),
      'provider' => $pattern_definition->getProvider(),
      'category' => 'Patterns',
      'class' => '\Drupal\ui_patterns_variants\Plugin\Layout\PatternVariants',
      'pattern' => $pattern_definition->id(),
      'template' => 'pattern-' . $pattern_definition->id(),
    ];
    foreach ($pattern_definition->getFields() as $field) {
      $definition['regions'][$field->getName()]['label'] = $field->getLabel();
    }
    $definitions['pattern_' . $pattern_definition->id()] = new LayoutDefinition($definition);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function ui_patterns_variants_preprocess_ds_entity_view(&$variables) {
  $pattern_settings = $variables['content']['#ds_configuration']['layout']['settings']['pattern'];
  if (isset($pattern_settings['variants'])) {
    $variant_settings = [];
    $entity = $variables['content']['#entity'];
    $entity_fields = $entity->getFieldDefinitions();

    foreach ($pattern_settings['variants'] as $key => $variant) {
      $variant_settings[$key] = NULL;

      if ($variant['variant_field'] &&
        isset($entity_fields[$variant['variant_field']]) &&
        $entity->get($variant['variant_field'])
      ) {
        $field_values = $entity->get($variant['variant_field'])->getValue();
        foreach ($field_values as &$value) {
          $value = implode(' ', $value);
        }
        $variant_settings[$key] = implode(' ', $field_values);
      }
      elseif (isset($variant['default'])) {
        $variant_settings[$key] = $variant['default'];
      }
    }


    foreach ($variant_settings as $key => &$value) {
      if (isset($pattern_settings['variants'][$key]['options'])) {
        $limited_value = [];

        foreach (array_keys($pattern_settings['variants'][$key]['options']) as $option) {
          if (strpos($value, $option) !== FALSE) {
            $limited_value[] = $option;
          }
        }

        $value = implode(' ', $limited_value);

        if (!$value && $pattern_settings['variants'][$key]['default']) {
          $value = $pattern_settings['variants'][$key]['default'];
        }
      }
    }

    // Set some variables to be used in the preprocess for the pattern.
    $variables['content']['#context']['variants'] = $variant_settings;
  }
}

/**
 * Implements hook_preprocess_pattern_views_row().
 */
function ui_patterns_variants_preprocess_pattern_views_row(&$variables) {
  $variables['pattern']['#context']['variants'] = ['image_style' => 'here'];
}

/**
 * Implements hook_preprocess().
 */
function ui_patterns_variants_preprocess(&$variables, $hook) {
  /** @var \Drupal\ui_patterns\Definition\PatternDefinition[] $pattern_definitions */
  foreach (UiPatterns::getPatternDefinitions() as $pattern_definition) {
    if ($hook != 'pattern_' . $pattern_definition->id()) {
      continue;
    }

    /** @var \Drupal\ui_patterns\Element\PatternContext $context */
    $context = $variables['context'];
    $variants = $context->getProperty('variants');

    if ($variants) {
      $variables['variants'] = $variants;
    }
    break;
  }
}
